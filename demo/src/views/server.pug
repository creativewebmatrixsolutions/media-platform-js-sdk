include ./mixins/nav-bar
include ./mixins/styles
doctype html
html()
    head
        title Wix Media Platform - Demo

        script(src='/media-platform.min.js')
        +styles

        script.
            var mediaPlatform = new MP.MediaPlatform({
                domain: 'wixmp-410a67650b2f46baa5d003c6.appspot.com',
                authenticationUrl: 'http://' + location.host + '/media-platform/auth-header'
            });

            var Image = MP.Image;
            var UploadUrlRequest = MP.file.UploadUrlRequest;
            var fileHost = 'wixmp-410a67650b2f46baa5d003c6.wixmp.com';
            var imagesHost = 'images-wixmp-410a67650b2f46baa5d003c6.wixmp.com';
            var videosHost = 'wixmp-410a67650b2f46baa5d003c6.wixmp.com';

    body

        +nav-bar

        .content
            .group
                .actions
                    h2 Files
                    #upload
                        #upload-code.code-snippet
                            p.
                                fileManager.uploadFile('/demo/image.jpg', __dirname + '/../files/image.jpg', null, function (error, response) {
                                    // do something
                                });
                            button(id='upload-button').btn.
                                Execute
                            h4 Result
                                #upload-result.pre

                    #list
                        #list-code.code-snippet
                            p.
                                fileManager.listFiles('/demo', null, function (error, listFilesResponse) {
                                    // do something
                                });
                            button(id='list-button').btn.
                                Execute
                            h4 Result
                                #list-result.pre

                    #delete
                        #delete-code.code-snippet
                            p.
                                fileManager.listFiles('path', null, function (error, fileDescriptors) {
                                    // do something
                                });
                            button(id='delete-button').btn.
                                Execute
                            h4 Result
                                #delete-result.pre

        script.
            var uploadButton = document.getElementById('upload-button');
            var uploadResult = document.getElementById('upload-result');
            uploadButton.addEventListener('click', function () {
                doGet('http://' + location.host + '/media-platform/file/upload', uploadResult)
            });
            var listButton = document.getElementById('list-button');
            var listResult = document.getElementById('list-result');
            listButton.addEventListener('click', function () {
                doGet('http://' + location.host + '/media-platform/files', listResult)
            });
            var deleteButton = document.getElementById('delete-button');
            deleteButton.addEventListener('click', function () {
                alert('DELETE!');
            });

            function doGet(url, resultContainer) {
                var request = new XMLHttpRequest();
                request.responseType = 'json';
                request.addEventListener('load', function (event) {
                    var el = document.createElement('pre');
                    el.innerHTML = jsonSyntaxHighlight(event.target.response);
                    setChild(resultContainer, el);
                });

                request.addEventListener('error', function (event) {
                    alert('Oops! Something went wrong.');
                });

                request.open('GET', url);
                request.send();
            }

            function removeChildren(node) {
                while (node.firstChild) {
                    node.removeChild(node.firstChild);
                }
            }

            function setChild(node, child) {
                removeChildren(node);
                node.appendChild(child);
            }

            function jsonSyntaxHighlight(json) {
                var str = JSON.stringify(json, null, 2)
                str = str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
                return str.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
                    var cls = 'number';
                    if (/^"/.test(match)) {
                        if (/:$/.test(match)) {
                            cls = 'key';
                        } else {
                            cls = 'string';
                        }
                    } else if (/true|false/.test(match)) {
                        cls = 'boolean';
                    } else if (/null/.test(match)) {
                        cls = 'null';
                    }
                    return '<span class="' + cls + '">' + match + '</span>';
                });
            }

