include ./mixins/nav-bar
include ./mixins/styles

doctype html
html()
    head
        title Wix Media Platform - Demo

        script(src="/media-platform.min.js")
        script(src="/prismjs/prism.js")
        link(href="/prismjs/themes/prism.css")
        +styles

        script.
            var mediaPlatform = new MP.MediaPlatform({
                domain: "wixmp-410a67650b2f46baa5d003c6.appspot.com",
                authenticationUrl: "http://" + location.host + "/media-platform/auth-header"
            });

            var Image = MP.Image;
            var UploadUrlRequest = MP.file.UploadUrlRequest;
            var fileHost = "wixmp-410a67650b2f46baa5d003c6.wixmp.com";
            var imagesHost = "images-wixmp-410a67650b2f46baa5d003c6.wixmp.com";
            var videosHost = "wixmp-410a67650b2f46baa5d003c6.wixmp.com";

    body

        +nav-bar

        .content
            .group
                h2#Instantiation Instantiation
                .highlight
                    pre
                        code.language-javascript.
                            var mediaPlatform = new MP.MediaPlatform({
                                domain: "wixmp-410a67650b2f46baa5d003c6.appspot.com",
                                authenticationUrl: "http://localhost/media-platform/auth-header"
                            });

                h2#FileManagementApi File Management API
                    h4 Upload A file (any mime type)
                    .highlight
                        pre
                            code.language-javascript.
                                mediaPlatform.fileManager
                                    .uploadFile(path, file)
                                    .on("upload-success", function(response) {
                                        // handle success
                                    });

                    .demo-group
                        label(for='file-management').btn.
                            Upload File
                        span#file-management-path.path-to-file
                        form(enctype='multipart/form-data' action='' method='post' target='upload-result')
                            input(id='file-management' name='file' type='file')
                        .highlight.highlight-response
                            pre
                                code.language-javascript#file-management-payload.
                                    nothing to display here

                    h4 Retrieve a list of uploaded files
                    .highlight
                        pre
                            code.language-javascript.
                                var listFileRequest = new MP.file.ListFilesRequest();

                                mediaPlatform.fileManager
                                  .listFiles("PATH_BASE", listFilesRequest, function() {
                                    // handle response
                                  });

                    .demo-group
                        button#file-list-button.btn.
                            Execute

                        .highlight.highlight-response
                            pre
                                code.language-javascript#file-list-payload.
                                    nothing to display here

                h2#ImageApi Image API
                    H4 Upload image
                    .highlight
                        pre
                            code.language-javascript.
                                mediaPlatform.fileManager
                                    .uploadFile(path, file)
                                    .on("upload-success", function(response) {
                                        // handle success
                                    });

                    .demo-group
                        label(for='image-file').btn.
                            Upload Image
                        span#image-file-path.path-to-file
                        form(enctype='multipart/form-data' action='' method='post' target='upload-result')
                            input(id='image-file' name='file' type='file' accept='image/*')

                        .response
                            .highlight.highlight-response
                                pre
                                    code.language-javascript#image-payload.
                                        nothing to display here

                            .output
                                img#image-output(src="/assets/img/no-preview.jpg")


        script.
            var PATH_BASE = "/demo/";

            // FILE MANAGEMENT API
            (function() {

                // upload file
                var fileUploadButton = document.getElementById("file-management");
                var fileUploadPayload = document.getElementById("file-management-payload");
                var fileUploadPath = document.getElementById("file-management-path");

                fileUploadButton.addEventListener("change", function() {
                  var path = PATH_BASE + this.value.split("\\").pop();
                  var file = this.files[0];

                  fileUploadPath.innerHTML = path;

                  // TODO: make callback optional
                  mediaPlatform.fileManager.deleteFileByPath(path, function(error, response) {
                    // do nothing...
                  });

                  mediaPlatform.fileManager
                    .uploadFile(path, file)
                    .on('upload-success', function (response) {
                      var html = Prism.highlight(JSON.stringify(response.fileDescriptors, null, 2), Prism.languages.js);
                      fileUploadPayload.innerHTML = html;
                    });
                });


                // get list of files
                var fileListButton = document.getElementById("file-list-button");
                var fileListPayload = document.getElementById("file-list-payload");

                fileListButton.addEventListener("click", function() {
                    var listFileRequest = new MP.file.ListFilesRequest();

                    mediaPlatform.fileManager
                      .listFiles("/", listFileRequest, function(error, response) {
                           if (error) {
                             console.error('error', response.error);
                             return
                           }

                           var html = Prism.highlight(JSON.stringify(response, null, 2), Prism.languages.js);
                           fileListPayload.innerHTML = html;
                      });
                });
            })();


            // IMAGE API
            (function() {
                var imageFile = document.getElementById("image-file");
                var imageOutput = document.getElementById("image-output");
                var imagePayload = document.getElementById("image-payload");
                var imageFilePath = document.getElementById("image-file-path");

                imageFile.addEventListener("change", function () {
                    var path = PATH_BASE + this.value.split("\\").pop();
                    var file = this.files[0];

                    imageFilePath.innerHTML = path;

                    // TODO: make callback optional
                    mediaPlatform.fileManager.deleteFileByPath(path, function (error, response) {
                        // do nothing...
                    });

                    mediaPlatform.fileManager
                        .uploadFile(path, file)
                        .on('upload-success', function (response) {
                            var images = response.fileDescriptors;
                            var image = images[0];
                            var url = "http://" + imagesHost + image.path;
                            var html = Prism.highlight(JSON.stringify(image, null, 2), Prism.languages.js);

                            imageOutput.setAttribute("src", url);
                            imagePayload.innerHTML = html;
                        })
                        .on('upload-error', function(error) {
                          console.error('upload error:', error);
                        });
                })

            })();